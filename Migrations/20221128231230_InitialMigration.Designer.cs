// <auto-generated />
using System;
using InterfazTP;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterfazTP.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20221128231230_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterfazTP.Data.CajaDeAhorro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cbu")
                        .HasColumnType("int");

                    b.Property<float>("saldo")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Caja_de_Ahorro", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.Movimiento", b =>
                {
                    b.Property<int>("id_movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_movimiento"));

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("date");

                    b.Property<float>("monto")
                        .HasColumnType("real");

                    b.Property<int>("num_caja")
                        .HasColumnType("int");

                    b.HasKey("id_movimiento");

                    b.HasIndex("num_caja");

                    b.ToTable("Movimientos", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.Pago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("metodo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<float>("monto")
                        .HasColumnType("real");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<bool>("pagado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("num_usr");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.PlazoFijo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime>("fechaIni")
                        .HasColumnType("date");

                    b.Property<float>("monto")
                        .HasColumnType("real");

                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<bool>("pagado")
                        .HasColumnType("bit");

                    b.Property<float>("tasa")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("num_usr");

                    b.ToTable("Plazo_Fijo", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.TarjetaDeCredito", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("codigoV")
                        .HasColumnType("int");

                    b.Property<float>("consumos")
                        .HasColumnType("real");

                    b.Property<float>("limite")
                        .HasColumnType("real");

                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("num_usr");

                    b.ToTable("Tarjeta_de_Credito", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<bool>("administrador")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<int>("intentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("InterfazTP.Data.UsuarioCajaDeAhorro", b =>
                {
                    b.Property<int>("id_UsuarioCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_UsuarioCaja"));

                    b.Property<int>("fk_cajaAhorro")
                        .HasColumnType("int");

                    b.Property<int>("fk_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_UsuarioCaja");

                    b.HasIndex("fk_cajaAhorro");

                    b.HasIndex("fk_usuario");

                    b.ToTable("UsuarioCajaDeAhorro");
                });

            modelBuilder.Entity("InterfazTP.Data.Movimiento", b =>
                {
                    b.HasOne("InterfazTP.Data.CajaDeAhorro", "caja")
                        .WithMany("movimientos")
                        .HasForeignKey("num_caja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");
                });

            modelBuilder.Entity("InterfazTP.Data.Pago", b =>
                {
                    b.HasOne("InterfazTP.Data.Usuario", "usuario")
                        .WithMany("pagos")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("InterfazTP.Data.PlazoFijo", b =>
                {
                    b.HasOne("InterfazTP.Data.Usuario", "titular")
                        .WithMany("pf")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("titular");
                });

            modelBuilder.Entity("InterfazTP.Data.TarjetaDeCredito", b =>
                {
                    b.HasOne("InterfazTP.Data.Usuario", "titular")
                        .WithMany("tarjetas")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("titular");
                });

            modelBuilder.Entity("InterfazTP.Data.UsuarioCajaDeAhorro", b =>
                {
                    b.HasOne("InterfazTP.Data.CajaDeAhorro", "cajaAhorro")
                        .WithMany("UsuarioCaja")
                        .HasForeignKey("fk_cajaAhorro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterfazTP.Data.Usuario", "usuario")
                        .WithMany("UsuarioCaja")
                        .HasForeignKey("fk_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cajaAhorro");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("InterfazTP.Data.CajaDeAhorro", b =>
                {
                    b.Navigation("UsuarioCaja");

                    b.Navigation("movimientos");
                });

            modelBuilder.Entity("InterfazTP.Data.Usuario", b =>
                {
                    b.Navigation("UsuarioCaja");

                    b.Navigation("pagos");

                    b.Navigation("pf");

                    b.Navigation("tarjetas");
                });
#pragma warning restore 612, 618
        }
    }
}
